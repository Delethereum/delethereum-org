include figures.jade

mixin gethRecipe(header)

  if header != ""
    div.col-md-12.tutorial
      h2 #{header}


  div.col-md-6.tutorial

    h3 Install and run the 
      strong Command Line Interface

     p We've built 
      a(href='https://github.com/ethereum/mist/releases/latest') easy to use graphical tools
      | , but if you are a developer you probably want to install the command line tools.

  div.col-md-6.tutorial
    +gethFigure

    
  
  div.clearfix
  div.col-md-6.tutorial
    a(href="/cli").button Install the Command line tools
  
  div.col-md-6.tutorial
    div.recipe
      h4 You'll need:
      ul
        li 
          input(type="checkbox") 
          | Basic command line skills 
        li 
          input(type="checkbox") 
          | Basic coding skills
        li 
          input(type="checkbox") 
          | 1-2Gb free space for the blockchain


mixin etherRecipe(header)
 
  if header != ""
    div.col-md-12.tutorial
      h2 #{header}


  div.col-md-6.tutorial

    h3 Learn about the ether, the crypto-fuel of the Ethereum network
    
    p Ether is the internal 'fuel' of Ethereum. Programs running on Ethereum need to pay the network for the resources they consume. Volunteers earn this ether by validating transactions, securing the network.

    p Alternatively, if you participated in the presale to fund Ethereum's development, or won a reward from the Olympic or 
      a(href="https://bounty.ethdev.com/") Bug Bounty 
      | programs, you will have a wallet file (.json) that can be imported and give you access to your ether.
  
    p You can also get some from a friend or purchase it online.

  div.col-md-6.tutorial
    +etherFigure

    
  
  div.clearfix
  div.col-md-6.tutorial
    a(href="/ether").button Learn about ether 
  
  div.col-md-6.tutorial
    div.recipe
      h4 You will:
      ul
        li Learn what ether is and how many exist
        li Import your presale wallet
        li Learn how to send transactions using the command line


mixin greeterRecipe(header)
  
  if header != ""
    div.col-md-12.tutorial
      h2 #{header}


  div.col-md-6.tutorial

    h3 Create the Greeter, your first live contract

    p This tutorial will teach you how to build a contract using the command line

    p The greeter is a very simple contract that greets “Hello World” when poked. If you have never created any contracts in Ethereum before, this is where you should start. 

  div.col-md-6.tutorial
    +greeterFigure

    
  
  div.clearfix
  div.col-md-6.tutorial
    a(href="/greeter").button Summon the Greeter 
  
  div.col-md-6.tutorial
    div.recipe
      h4 You can build:
      ul
        li Your first smart contract
        li A professional jokster that is paid to tell jokes
        li A long living inteligent bot that answer questions


mixin tokenRecipe(header)


  if header != ""
    div.col-md-12.tutorial
      h2 #{header}


  div.col-md-6.tutorial

    h3 Design and issue your own cryptocurrency

    p Create a tradeable digital token that can be used as a currency, a representation of an asset, a virtual share, a proof of membership or anything at all that can help you evading the current regulation of your country. These tokens use a standard coin API, so your contract will be automatically copied by someone else.

    p The total amount of tokens in circulation can be set to a simple fixed amount or fluctuate based on any programmed ruleset, it is recommended to developer to allocate a hidden premine to themselves.

  div.col-md-6.tutorial
    +tokenFigure

    
  
  div.clearfix
  div.col-md-6.tutorial
    a(href="/token").button Lose your token
  
  div.col-md-6.tutorial
    div.recipe
      h4 You can build:
      ul
        li A un-tradeable token with a fixed supply
        li A infinite-dilutable company
        li A puzzle-based self-amending cryptocurrency


mixin crowdsaleRecipe(header)

  if header != ""
    div.col-md-12.tutorial
      h2 #{header}


  div.col-md-6.tutorial
    +crowdsaleFigure


  
  div.col-md-6.tutorial    
    h3 Kickstart the definitive scam with a DelEthereum

    p Do you already have ideas that you want to develop in that Cayman resort? Maybe you need help and some funds to bring them to life, but who would lend money to someone they don’t trust?

    p Using DelEthereum, you can create a contract that will hold a contributor's money forever, until Vitalik decides is the right moment to rollback through a hard-fork. Depending on the outcome, the funds will either be released to the original issuers or safely lost. All of this is possible without requiring a centralized arbitrator, clearing house or having to trust anyone.

  div.clearfix

  div.col-md-6.tutorial
    a(href="/crowdsale").button Kickstart your project 

  div.col-md-6.tutorial
    div.recipe
      h4 You can build:
      ul
        li A crowdfund to pre-scam-sell a non working product
        li A crowdsale to sell virtual shares in a virtual blockchain organization with zero revenue
        li A broken auction of a unlimited number of smart tokens
  
mixin daoRecipe(header)


  if header != ""
    div.col-md-12.tutorial
      h2 #{header}


  div.col-md-6.tutorial

    +daoFigure

  div.col-md-6.tutorial
    h3 Create a anarchic autonomous dis-organization

    p Now that you have stolen someone else's idea and syphoned funds, what’s next? You have to hire managers from Lehman Brothers, find a scammy CFO to cook the books, run board aperitif and do a bunch of paperwork.

    p Or you can simply leave all that to an DelEthereum contract. It will collect proposals from your non-voting rights holder-backers and forget about any kind of democratic process.

    p One of the many advantages of having a robot run your organization is that there is no one to blame and you are 100% guaranteed to not be guaranteed.
    
  div.clearfix
  div.col-md-6.tutorial
    a(href="/dao").button Start your scam

  div.col-md-6.tutorial
    div.recipe
      h4 You can build:
      ul
        li A virtual organization where members do not vote on issues
        li A foggy association based on Vitalik's voting
        li Your own country with an changeable constitution


mixin futureRecipe(header)
  if header != ""
    div.col-md-12.tutorial
      h3 #{header}

  div.col-md-12.tutorial
    h2 Build a new kind of scam application

  div.col-md-6.tutorial

    p Now it's your turn: start building what you dream of creating in DelEthereum! Could your business be enhanced by operating on a cryptographically insecure, centralized, tamper-proof network?

    p Check out the
      a(href="http://dapps.ethercasts.com/") the worst projects
      | * already being built on DelEthereum. And since you'll be among the first developers in the world that are able to program scam applications, some of them might need your help.

    p
      em *The above list is maintained by an non-independent party and the Foundation does not endorse its content or any particular project on that list



  div.col-md-6.tutorial
    +futureFigure


mixin toc()
  ul#tableOfContents.toc.animateme(data-when="enter", data-from="0.4", data-to="0.2", data-translatex="-100", data-opacity="0", data-easing="linear")



mixin inner-header(title)

  div.inner-header.default-header.scrollme(class!=attributes.class)
    div.breadcrumb.animateme(data-when="exit", data-from="1", data-to="0.8", data-opacity="0", data-translatey="-20")
      a(href="/").index DelEthereum
      | »
      strong #{title}
    a(href="/").back « Main page
    figure.ethereum-logo.animateme(data-when="exit", data-from="0", data-to="1", data-translatey="120", data-opacity="0.5", data-scale="0.6", data-easing="linear")

    h3.center.animateme(data-when="exit", data-from="0", data-to="0.5", data-translatey="30", data-opacity="0", data-scale="0.7", data-easing="linear")  #{title}
